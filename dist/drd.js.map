{"version":3,"sources":["../src/drd.js"],"names":["seedrandom","require","util","Prng","fn","Math","random","min","max","ceil","floor","defaults","defaultRng","Source","rng","getItem","constructor","name","RangeSource","RngOverrideSource","successProbability","defaultValue","FlipSource","ListSource","obj","ctx","list","idx","getRandomInt","length","flatten","arr","reduce","f","a","concat","Array","isArray","src","get","ret","n","push","exports","prob","getRandomFloat","LiteralSource","literal","TokenSource","tokens","i","token","OneOfTokenSource","ObjectTokenSource","resolveValue","parent","isUndefined","undefined","o","isFunction","isObject","Object","keys","key","MarkovChainSource","Generator","seed","prototype","slice","call","arguments","AbstractSource","Defaults"],"mappings":"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","file":"drd.js","sourcesContent":["'use strict'\n\nconst seedrandom = require('seedrandom');\nconst util = require('util');\n\nclass Prng {\n  \n  constructor(fn) {\n    this.fn = fn || Math.random;\n  }\n  \n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(this.fn() * (max - min)) + min;\n  }\n  \n  getRandomFloat(min, max) {\n    return this.fn() * (max - min) + min;\n  }\n}\n\nconst defaults = {\n  defaultRng: new Prng(seedrandom())\n};\n\nclass Source {\n  \n  get(rng) {\n    return this.getItem(rng || defaults.defaultRng);\n  }\n  \n  getItem(rng) {\n    throw `getItem() is not implemented on ${this.constructor.name}`;\n  }\n  \n  repeat(min, max) {\n    return new RangeSource(this, min, max);\n  }\n  \n  withRng(rng) {\n    return new RngOverrideSource(this, rng);\n  }\n  \n  /*\n  Wraps a source such that it will execute only if a certain probability is met.\n  It's basically a special case of repeat(0, 1). \n  \n  repeat(0,1) is an uniform distribution of 0 or 1 and would be the same as flip() or flip(0.5).  However the \n  result of a flip isn't necessarily an array (whereas repeat(0,1) is), and the probability is controlled\n  \n  */\n  flip(successProbability, defaultValue) {\n    return new FlipSource(this, successProbability, defaultValue);\n  }\n}\n\nclass ListSource extends Source {\n  \n  constructor(obj, ctx) {\n    super(ctx);\n    this.list = obj;\n  }\n  \n  getItem(rng) {\n    let idx = rng.getRandomInt(0, this.list.length);\n    return this.list[idx];\n  }\n}\n\nfunction flatten(arr) {\n  return arr.reduce(function (f, a) {\n    return f.concat(Array.isArray(a) ? flatten(a) : a);\n  }, []);\n}\n\nclass RngOverrideSource extends Source {\n  constructor(src, rng) {\n    super();\n    this.src = src;\n    this.rng = rng;\n  }\n  \n  getItem() {\n    return this.src.get(this.rng);\n  }\n}\n\nclass RangeSource extends Source {\n  \n  constructor(src, min, max) {\n    super();\n    this.src = src;\n    this.min = min;\n    this.max = Math.max(max || 1, min);\n  }\n  \n  getItem(rng) {\n    \n    let ret = [];\n    \n    let n = 1;\n    if(this.min !== 1 || this.max !== 1)\n      n = rng.getRandomInt(this.min, this.max+1);\n    \n    for(let idx=0; idx<n; idx++){\n      //don't pass the possibly overriden rng down to the next level (prevents infinite overrides)\n      ret.push(this.src.get());\n    }\n    \n    return flatten(ret);\n  }\n  \n}\n\nlet FlipSource = exports.FlipSource = class FlipSource extends Source {\n  \n  constructor(src, prob, defaultValue) {\n    super();\n    this.src = src;\n    this.prob = prob || 0.5;\n    this.defaultValue = defaultValue;\n  }\n  \n  getItem(rng) {\n    \n    if(rng.getRandomFloat() < this.prob) {\n      return this.src.get();\n    }\n    \n    if(this.defaultValue && this.defaultValue instanceof Source) {\n      return this.defaultValue.get();\n    }\n    \n    return this.defaultValue;\n  }\n  \n}\n\nclass LiteralSource extends Source {\n  constructor(literal) {\n    super();\n    this.literal = literal;\n  }\n  \n  getItem() {\n    return this.literal;\n  }\n}\n\nclass TokenSource extends Source {\n  constructor(tokens) {\n    super();\n    this.tokens = tokens;\n  }\n  \n  getItem() {\n    \n    let ret = [];\n    \n    for(let i=0; i<this.tokens.length; i++) {\n      let token = this.tokens[i];\n      \n      if(token instanceof Source) {\n        ret.push(token.get());\n      } else {\n        ret.push(token);\n      }\n    }\n    \n    return flatten(ret);\n  }\n}\n\nlet OneOfTokenSource = exports.OneOfTokenSource = class OneOfTokenSource extends Source {\n    constructor(tokens) {\n        super();\n        this.tokens = tokens;\n    }\n    \n    getItem(rng) {\n        let idx = rng.getRandomInt(0, this.tokens.length);\n        \n        let token = this.tokens[idx];\n        \n        if(token instanceof Source) {\n          return token.get();\n        } else {\n          return token;\n        }\n    }\n};\n\nlet ObjectTokenSource = exports.ObjectTokenSource = class ObjectTokenSource extends Source {\n    constructor(obj) {\n        super();\n        this.obj = obj;\n    }\n    \n    getItem() {\n        return this.resolveValue(this.obj);\n    }\n    \n    resolveValue(token, parent) {\n        \n        if(token === null)\n            return null;\n        \n        if(util.isUndefined(token))\n            return undefined;\n        \n        if(token instanceof Source) {\n          return token.get();\n        } else if(util.isArray(token)) {\n            let ret = [];\n            \n            for(let o of token) {\n                ret.push(this.resolveValue(o, parent || ret));\n            }\n            \n            return ret;\n        } else if(util.isFunction(token)) {\n            return token(parent);  \n        } else if(util.isObject(token)) {\n            let ret = {};\n            \n            for (let key of Object.keys(token)) {\n                ret[key] = this.resolveValue(token[key], parent || ret);\n            }\n            \n            return ret;\n        }\n        \n        return token;\n    };\n}\n\nlet MarkovChainSource = exports.MarkovChainSource = class MarkovChainSource extends Source {\n    constructor(obj) {\n        super();\n    }\n    \n    getItem() {\n        return this.resolveValue(this.obj);\n    }\n    \n    resolveValue(token, parent) {\n        \n        if(token === null)\n            return null;\n        \n        if(util.isUndefined(token))\n            return undefined;\n        \n        if(token instanceof Source) {\n          return token.get();\n        } else if(util.isArray(token)) {\n            let ret = [];\n            \n            for(let o of token) {\n                ret.push(this.resolveValue(o, parent || ret));\n            }\n            \n            return ret;\n        } else if(util.isFunction(token)) {\n            return token(parent);  \n        } else if(util.isObject(token)) {\n            let ret = {};\n            \n            for (let key of Object.keys(token)) {\n                ret[key] = this.resolveValue(token[key], parent || ret);\n            }\n            \n            return ret;\n        }\n        \n        return token;\n    };\n};\n\nclass Generator {\n  \n  constructor() {\n    \n  }\n  \n  seedPrng(seed) {\n    defaults.defaultRng = new Prng(seedrandom(seed));\n  }\n  \n  literal(o) {\n    return new LiteralSource(o);\n  }\n  \n  tokens() {\n    let arr = Array.prototype.slice.call(arguments, 0);\n    return new TokenSource(flatten(arr));\n  }\n  \n  list(arr) {\n    return new ListSource(arr);\n  }\n  \n  oneOf() {\n      let arr = Array.prototype.slice.call(arguments, 0);\n      return new OneOfTokenSource(arr);\n  }\n  \n  map(obj) {\n      return new ObjectTokenSource(obj);\n  }\n}\n\nexports.ListSource = ListSource;\nexports.TokenSource = TokenSource;\nexports.LiteralSource = LiteralSource;\nexports.RangeSource = RangeSource;\nexports.RngOverrideSource = RngOverrideSource;\nexports.AbstractSource = Source;\nexports.Prng = Prng;\nexports.Defaults = defaults;\nexports.Generator = Generator;"]}