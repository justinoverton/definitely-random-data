{"version":3,"sources":["../src/drd.js"],"names":["seedrandom","require","Prng","fn","Math","random","min","max","ceil","floor","defaults","defaultRng","Source","rng","constructor","name","RangeSource","RngOverrideSource","ListSource","obj","ctx","list","idx","getRandomInt","length","flatten","arr","reduce","f","a","concat","Array","isArray","src","getItem","ret","n","push","LiteralSource","literal","TokenSource","tokens","i","token","Generator","o","prototype","slice","call","arguments","exports","AbstractSource","Defaults"],"mappings":"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","file":"drd.js","sourcesContent":["'use strict'\n\nconst seedrandom = require('seedrandom');\n\nclass Prng {\n  \n  constructor(fn) {\n    this.fn = fn || Math.random;\n  }\n  \n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(this.fn() * (max - min)) + min;\n  }\n  \n  getRandomFloat(min, max) {\n    return this.fn() * (max - min) + min;\n  }\n}\n\nconst defaults = {\n  defaultRng: new Prng(seedrandom())\n};\n\nclass Source {\n  \n  getItem(rng) {\n    throw `getItem() is not implemented on ${this.constructor.name}`;\n  }\n  \n  repeat(min, max) {\n    return new RangeSource(this, min, max);\n  }\n  \n  withRng(rng) {\n    return new RngOverrideSource(this, rng);\n  }\n}\n\nclass ListSource extends Source {\n  \n  constructor(obj, ctx) {\n    super(ctx);\n    this.list = obj;\n  }\n  \n  getItem(rng) {\n    rng = rng || defaults.defaultRng;\n    let idx = rng.getRandomInt(0, this.list.length);\n    return this.list[idx];\n  }\n}\n\nfunction flatten(arr) {\n  return arr.reduce(function (f, a) {\n    return f.concat(Array.isArray(a) ? flatten(a) : a);\n  }, []);\n}\n\nclass RngOverrideSource extends Source {\n  constructor(src, rng) {\n    super();\n    this.src = src;\n    this.rng = rng;\n  }\n  \n  getItem() {\n    return this.src.getItem(this.rng);\n  }\n}\n\nclass RangeSource extends Source {\n  \n  constructor(src, min, max) {\n    super();\n    this.src = src;\n    this.min = min;\n    this.max = Math.max(max || 1, min);\n  }\n  \n  getItem(rng) {\n    \n    rng = rng || defaults.defaultRng;  \n    let ret = [];\n    \n    let n = 1;\n    if(this.min !== 1 || this.max !== 1)\n      n = rng.getRandomInt(this.min, this.max+1);\n    \n    for(let idx=0; idx<n; idx++){\n      //don't pass the possibly overriden rng down to the next level (prevents infinite overrides)\n      ret.push(this.src.getItem());\n    }\n    \n    return flatten(ret);\n  }\n  \n}\n\nclass LiteralSource extends Source {\n  constructor(literal) {\n    super();\n    this.literal = literal;\n  }\n  \n  getItem() {\n    return this.literal;\n  }\n}\n\nclass TokenSource extends Source {\n  constructor(tokens) {\n    super();\n    this.tokens = tokens;\n  }\n  \n  getItem() {\n    \n    let ret = [];\n    \n    for(let i=0; i<this.tokens.length; i++) {\n      let token = this.tokens[i];\n      \n      if(token instanceof Source) {\n        ret.push(token.getItem());\n      } else {\n        ret.push(token);\n      }\n    }\n    \n    return flatten(ret);\n  }\n}\n\nclass Generator {\n  \n  constructor() {\n    \n  }\n  \n  literal(o) {\n    return new LiteralSource(o);\n  }\n  \n  tokens() {\n    let arr = Array.prototype.slice.call(arguments, 0);\n    return new TokenSource(flatten(arr));\n  }\n  \n  list(arr) {\n    return new ListSource(arr);\n  }\n  \n}\n\nexports.ListSource = ListSource;\nexports.TokenSource = TokenSource;\nexports.LiteralSource = LiteralSource;\nexports.RangeSource = RangeSource;\nexports.RngOverrideSource = RngOverrideSource;\nexports.AbstractSource = Source;\nexports.Prng = Prng;\nexports.Defaults = defaults;\n\n\nexports.Generator = Generator;"]}